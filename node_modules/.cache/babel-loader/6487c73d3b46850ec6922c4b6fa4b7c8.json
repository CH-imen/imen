{"ast":null,"code":"// import { createStore } from \"redux\";\n// import rootReducer from '../reducers'\n\n// const store = createStore(\n//     rootReducer,\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//     )\n//  export default store\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers/index';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage: storage\n};\nconst middlewares = [thunk];\nif (process.env.NODE_ENV === `development`) {\n  const {\n    logger\n  } = require(`redux-logger`);\n  middlewares.push(logger);\n}\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport default (() => {\n  let store = createStore(persistedReducer, applyMiddleware(...middlewares));\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n});","map":{"version":3,"names":["createStore","applyMiddleware","thunk","reducers","persistStore","persistReducer","storage","persistConfig","key","middlewares","process","env","NODE_ENV","logger","require","push","persistedReducer","store","persistor"],"sources":["C:/React/todo-app/src/redux/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\n// import rootReducer from '../reducers'\r\n\r\n// const store = createStore(\r\n//     rootReducer,\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//     )\r\n//  export default store\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers/index';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nconst persistConfig = {\r\n   key: 'root',\r\n   storage: storage,\r\n}\r\nconst middlewares = [thunk];\r\nif (process.env.NODE_ENV === `development`) {\r\n   const { logger } = require(`redux-logger`);\r\n\r\n   middlewares.push(logger);\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\nexport default () => {\r\n   let store = createStore(\r\n     persistedReducer,\r\n     applyMiddleware(...middlewares)\r\n   )\r\n   let persistor = persistStore(store)\r\n   return { store, persistor }\r\n}"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,MAAMC,aAAa,GAAG;EACnBC,GAAG,EAAE,MAAM;EACXF,OAAO,EAAEA;AACZ,CAAC;AACD,MAAMG,WAAW,GAAG,CAACP,KAAK,CAAC;AAC3B,IAAIQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAM,aAAY,EAAE;EACzC,MAAM;IAAEC;EAAO,CAAC,GAAGC,OAAO,CAAE,cAAa,CAAC;EAE1CL,WAAW,CAACM,IAAI,CAACF,MAAM,CAAC;AAC3B;AACA,MAAMG,gBAAgB,GAAGX,cAAc,CAACE,aAAa,EAAEJ,QAAQ,CAAC;AAChE,gBAAe,MAAM;EAClB,IAAIc,KAAK,GAAGjB,WAAW,CACrBgB,gBAAgB,EAChBf,eAAe,CAAC,GAAGQ,WAAW,CAAC,CAChC;EACD,IAAIS,SAAS,GAAGd,YAAY,CAACa,KAAK,CAAC;EACnC,OAAO;IAAEA,KAAK;IAAEC;EAAU,CAAC;AAC9B,CAAC"},"metadata":{},"sourceType":"module"}