{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\todo-app\\\\src\\\\components\\\\AddItems.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilterStatus } from '../slices/todoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppHeader() {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const initialFilterStatus = useSelector(state => state.todo.filterStatus);\n  const [filterStatus, setFilterStatus] = useState(initialFilterStatus);\n  const dispatch = useDispatch();\n  const updateFilter = e => {\n    setFilterStatus(e.target.value);\n    dispatch(updateFilterStatus(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.appHeader,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: () => setModalOpen(true),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectButton, {\n      id: \"status\",\n      onChange: e => updateFilter(e),\n      value: filterStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"incomplete\",\n        children: \"Incomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"complete\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoModal, {\n      type: \"add\",\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(AppHeader, \"7eKxHQHTNNhMBjQ06wdvx4tuCP4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = AppHeader;\nexport default AppHeader;\nvar _c;\n$RefreshReg$(_c, \"AppHeader\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","updateFilterStatus","AppHeader","modalOpen","setModalOpen","initialFilterStatus","state","todo","filterStatus","setFilterStatus","dispatch","updateFilter","e","target","value","styles","appHeader"],"sources":["C:/React/todo-app/src/components/AddItems.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateFilterStatus } from '../slices/todoSlice';\r\n\r\nfunction AppHeader() {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const initialFilterStatus = useSelector((state) => state.todo.filterStatus);\r\n  const [filterStatus, setFilterStatus] = useState(initialFilterStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateFilter = (e) => {\r\n    setFilterStatus(e.target.value);\r\n    dispatch(updateFilterStatus(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.appHeader}>\r\n      <Button variant=\"primary\" onClick={() => setModalOpen(true)}>\r\n        Add Task\r\n      </Button>\r\n      <SelectButton\r\n        id=\"status\"\r\n        onChange={(e) => updateFilter(e)}\r\n        value={filterStatus}\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"incomplete\">Incomplete</option>\r\n        <option value=\"complete\">Completed</option>\r\n      </SelectButton>\r\n      <TodoModal type=\"add\" modalOpen={modalOpen} setModalOpen={setModalOpen} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,qBAAqB;AAAC;AAEzD,SAASC,SAAS,GAAG;EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMO,mBAAmB,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAAC;EAC3E,MAAM,CAACA,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAACO,mBAAmB,CAAC;EACrE,MAAMK,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BH,eAAe,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/BJ,QAAQ,CAACT,kBAAkB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EAC9C,CAAC;EAED,oBACE;IAAK,SAAS,EAAEC,MAAM,CAACC,SAAU;IAAA,wBAC/B,QAAC,MAAM;MAAC,OAAO,EAAC,SAAS;MAAC,OAAO,EAAE,MAAMZ,YAAY,CAAC,IAAI,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnD,eACT,QAAC,YAAY;MACX,EAAE,EAAC,QAAQ;MACX,QAAQ,EAAGQ,CAAC,IAAKD,YAAY,CAACC,CAAC,CAAE;MACjC,KAAK,EAAEJ,YAAa;MAAA,wBAEpB;QAAQ,KAAK,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAChC;QAAQ,KAAK,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC9C;QAAQ,KAAK,EAAC,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B,eACf,QAAC,SAAS;MAAC,IAAI,EAAC,KAAK;MAAC,SAAS,EAAEL,SAAU;MAAC,YAAY,EAAEC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtE;AAEV;AAAC,GA5BQF,SAAS;EAAA,QAEYF,WAAW,EAEtBD,WAAW;AAAA;AAAA,KAJrBG,SAAS;AA8BlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}